<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
fPushable = true;
radius = 7;
height = 5;
faceDir = irandom(360);
spd = 0.4;
sprite = cSprGoomba;
scale = 0.1875;
actor_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="25">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Turn around on ledges
event_inherited();
if (shadowZ != -65536 &amp;&amp; !c_raycast_world(x, y, shadowZ + 1, x + hSpeed, y + vSpeed, shadowZ - 5, 1))
{
    x = xprevious;
    y = yprevious;
    faceDir = irandom(360);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="24">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check for target collision
event_inherited();
var player = collision_rectangle(x - radius - 1, y - radius - 1, x + radius + 1, y + radius + 1, target, false, true);
if (player &amp;&amp; bottom &lt; player.top &amp;&amp; top + 4 &gt; player.bottom)
    if (player.zSpeed &lt; 0 &amp;&amp; player.bottom &gt; z + 4)
    {
        with (player)
        {
            z = other.z + half;
            zSpeed = 2;
            d3d_sound_play(cSndGoombaDead, false, 1);
        }
        fSolid = false;
        instance_destroy();
    }
    else with (player) event_user(0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Goomba AI
if (timer_tick(0))
{
    alert = false;
    spd = 0.2;
    lostTarget = false;
}
if (cutscene_exists())
{
    spd = 0;
    hSpeed = 0;
    vSpeed = 0;
    exit
}
else if !(spd) if (alert) spd = 0.5; else spd = 0.2;
if (instance_exists(target))
{
    if (!alert &amp;&amp; target.z &gt; z - 8 &amp;&amp; target.z &lt; z + 8 &amp;&amp; point_distance_3d(x, y, z, target.x, target.y, target.z) &lt; 100 &amp;&amp; !c_raycast_world(x, y, z, target.x, target.y, target.z, 1))
    {
        d3d_sound_play(cSndGoomba, false, 1);
        timer[0] = 600;
        alert = true;
        spd = 0.5;
        zSpeed = 1;
    }
}
else alert = false;
if (alert)
{
    faceDir += turn_to_angle(point_direction(x, y, target.x, target.y), 5, faceDir);
    if (!lostTarget &amp;&amp; (point_distance_3d(x, y, z, target.x, target.y, target.z) &gt;= 100 || c_raycast_world(x, y, z, target.x, target.y, target.z, 1)))
    {
        lostTarget = true;
        timer[0] = 60;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
