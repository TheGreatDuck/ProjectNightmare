<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
jumpSnd[0] = global.snd[cSndMarioJump];
jumpSnd[1] = global.snd[cSndMarioJump2];
jumpSnd[2] = global.snd[cSndMarioJump3];
jumpSnd[3] = global.snd[cSndMarioJump4];
jumpSnd[4] = global.snd[cSndMarioJump5];
fallSnd[0] = global.snd[cSndMarioFall];
fallSnd[1] = global.snd[cSndMarioFall2];
hurtSnd[0] = global.snd[cSndMarioHurt];
hurtSnd[1] = global.snd[cSndMarioHurt2];
hurtSnd[2] = global.snd[cSndMarioHurt3];
hurtSnd[3] = global.snd[cSndMarioHurt4];
hurtSnd[4] = global.snd[cSndMarioHurt5];
deadSnd[0] = global.snd[cSndMarioDead];
hitbox_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario's animation &amp; move test
//Blink
if (timer_tick(0))
{
    if (sprite == cSprMario)
    {
        sprite = cSprMarioBlink;
        frameSpd = 0.2;
    }
    timer[0] = irandom_range(60, 300);
}
//Animation control
if (z &lt; global.minZ)
{
    sprite = cSprMarioWoah;
    frameSpd = 0.3;
}
else
    switch (sprite)
    {
        case (cSprMarioBlink):
            if (frame &gt;= 2.5)
            {
                sprite = cSprMario;
                frameSpd = 0.01;
            }
        break
        case (cSprMarioWoah): if !(floorPitch) sprite = cSprMario; break
        case (cSprMarioSlideStart):
            if (frame &gt;= 2.5)
            {
                sprite = cSprMarioSlide;
                frame = 0;
            }
        break
        case (cSprMarioSlide):
        case (cSprMarioSlide2):
            frameSpd = max(0.1, spdDis * 0.2);
            if (fric == 0.2) sprite = cSprMario;
        break
        case (cSprMarioFlip):
            if (frame &gt;= 3.5)
            {
                frameSpd = 0;
                if (fOnGround) sprite = cSprMario;
            }
        break
        default:
            if (sliding)
                if (floorPitch &gt; 75)
                {
                    if (sprite != cSprMarioWoah)
                    {
                        sprite = cSprMarioWoah;
                        frameSpd = 0.3;
                    }
                }
                else
                {
                    if (sprite != cSprMarioSlideStart)
                    {
                        sprite = cSprMarioSlideStart;
                        frame = 0;
                        frameSpd = 0.22;
                    }
                }
            else
                if (onGround)
                {
                    if (spdDis)
                    {
                        sprite = cSprMarioRun;
                        frameSpd = spdDis * 0.15;
                    }
                    else
                    {
                        if (sprite != cSprMarioBlink)
                        {
                            sprite = cSprMario;
                            frameSpd = 0.01;
                        }
                    }
                }
                else
                {
                    //Animation control (in mid-air)
                    sprite = cSprMarioJump;
                    frameSpd = 0;
                    frame = zSpeed &lt;= 0;
                }
    }
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
