<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlayer</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
jumpSnd[0] = cSndMarioJump;
jumpSnd[1] = cSndMarioJump2;
jumpSnd[2] = cSndMarioJump3;
jumpSnd[3] = cSndMarioJump4;
jumpSnd[4] = cSndMarioJump5;
fallSnd[0] = cSndMarioFall;
fallSnd[1] = cSndMarioFall2;
hurtSnd[0] = cSndMarioHurt;
hurtSnd[1] = cSndMarioHurt2;
hurtSnd[2] = cSndMarioHurt3;
hurtSnd[3] = cSndMarioHurt4;
hurtSnd[4] = cSndMarioHurt5;
deadSnd[0] = cSndMarioDead;
scale = 1.25;
actor_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mario's animation &amp; move test
//Animation control
switch (anim)
{
    case (cAniMarioJump):
        if (frame &lt; 5) frameSpd = 0.3;
        else
        {
            frame = 5;
            frameSpd = 0;
        }
    case (cAniMarioFall):
        var isFalling = anim == cAniMarioFall;
        bodygroup[0] = isFalling;
        bodygroup[1] = isFalling;
        if (zSpeed &gt;= 0 &amp;&amp; fOnGround)
            if (spdDis &lt;= 1)
            {
                anim = cAniMarioLand;
                frame = 0;
            }
            else anim = cAniMarioIdle;
    break
    case (cAniMarioLand):
    {
        if (frame &lt; 5) frameSpd = 0.3 + (spdDis * 0.3);
        else
        {
            anim = cAniMarioIdle;
            frame = 2;
        }
    }
    break
    default:
        bodygroup[0] = 0;
        bodygroup[1] = 0;
        if (onGround)
            if (spdDis &gt; 0.1)
            {
                anim = cAniMarioWalk;
                if (spdDis &gt; 1) anim = cAniMarioRun;
                frameSpd = spdDis * 0.225;
            }
            else
            {
                anim = cAniMarioIdle;
                frameSpd = 0.05;
            }
        else anim = cAniMarioFall;
}
skin[1] = (anim == cAniMarioJump) * 3;
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
