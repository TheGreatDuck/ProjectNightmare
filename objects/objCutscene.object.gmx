<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Made by Hello.
//This allows you to make cutscenes using cutscene_* scripts in the creation code.
wait=1;
cId=0;
data=0;
data2=0;
z=0;
pitch=0;
lerpAmount=1;
global.follow=false;
timer_create();
timer[0]=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actions, positioning &amp; waiting
//Execute current action in cutscene
if (timer_tick(0))
{
    wait=1;
    if (ds_list_empty(list))
        exit
    switch (cutscene_get_value())
    {
        case (0):
            x=cutscene_get_value();
            y=cutscene_get_value();
            z=cutscene_get_value();
            direction=cutscene_get_value();
            pitch=cutscene_get_value();
            lerpAmount=cutscene_get_value();
        break
        case (1):
            wait=cutscene_get_value();
        break
        case (2):
            cutscene_destroy();
        break
        case (3):
            var strings=cutscene_get_value();
            with (instance_create(0,0,objMessage))
                for (var i=0;i&lt;ds_list_size(strings);i++)
                    message[1+i]=ds_list_find_value(strings,i);
            ds_list_destroy(strings);
        break
        case (4):
            wait=-65536;
        break
    }
    timer[0]=wait;
}
if (instance_exists(objCamera) &amp;&amp; !global.follow)
{
    global.cX=lerp(global.cX,x,lerpAmount);
    global.cY=lerp(global.cY,y,lerpAmount);
    global.cZ=lerp(global.cZ,z,lerpAmount);
    objCamera.faceDir=lerp(objCamera.faceDir,direction,lerpAmount);
    objCamera.pitch=lerp(objCamera.pitch,pitch,lerpAmount);
}
if (wait==-65536 &amp;&amp; !instance_exists(objMessage))
{
    timer[0]=1;
    wait=1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy cutscene
cutscene_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
