<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Made by Hello.
//This allows you to make cutscenes using cutscene_* scripts in the creation code.
wait = 1;
cId = 0;
data = 0;
data2 = 0;
z = 0;
pitch = 0;
global.follow = false;
timer_create();
timer[0] = 1;
for (var i = 0; i &lt; 7; i++)
    startPos[i] = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="23">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Actions, positioning &amp; waiting
//Execute current action in cutscene
if (timer_tick(0))
{
    wait = 1;
    if (ds_list_empty(list))
        exit
    switch (cutscene_get_value())
    {
        //cutscene_camera
        case (0):
            x = cutscene_get_value();
            startPos[0] = global.cX;
            y = cutscene_get_value();
            startPos[1] = global.cY;
            z = cutscene_get_value();
            startPos[2] = global.cZ;
            direction = cutscene_get_value();
            startPos[3] = global.cD;
            pitch = cutscene_get_value();
            startPos[4] = global.cP;
            timer[1] = cutscene_get_value();
            startPos[5] = timer[1];
            startPos[6] = cutscene_get_value();
        break
        //cutscene_wait
        case (1):
            wait = cutscene_get_value();
        break
        //cutscene_end
        case (2):
            cutscene_destroy();
        break
        //cutscene_message
        case (3):
            var strings = cutscene_get_value();
            with (instance_create(0,0,objMessage))
                for (var i = 0; i &lt; ds_list_size(strings); i++)
                    message[1 + i] = ds_list_find_value(strings, i);
            ds_list_destroy(strings);
        break
        //cutscene_wait_message
        case (4):
            wait = -65536;
        break
        //cutscene_transition
        case (5):
            transition_create(cutscene_get_value(), cutscene_get_value());
        break
    }
    timer[0] = wait;
}
if (instance_exists(objCamera) &amp;&amp; !global.follow)
{
    var step, time = max(0, timer[1]);
    switch (startPos[6])
    {
        case (0):
            step = smoothstep(0, startPos[5], time);
        break
        case (1):
            step = time / startPos[5];
        break
    }
    global.cX = lerp(x, startPos[0], step);
    global.cY = lerp(y, startPos[1], step);
    global.cZ = lerp(z, startPos[2], step);
    objCamera.faceDir = lerp(direction, startPos[3], step);
    objCamera.pitch = lerp(pitch, startPos[4], step);
    timer_tick(1);
}
//cutscene_wait_message function. This pauses the cutscene until the player closes the message.
if (wait == -65536 &amp;&amp; !instance_exists(objMessage))
{
    timer[0] = 1;
    wait = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy cutscene
cutscene_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
