<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Intro variables
wobble=0;
state=0;
image_xscale=0;
image_alpha=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Intro animation control
switch (state)
{
    case (0):
        //Set our timer to begin
        alarm[0]=30;
        state=1;
    break
    case (1):
        //Tick down the timer before the logo appears.
        if (alarm[0])
            alarm[0]--;
        else
        {
            //Play sound based on random intro variety
            var snd=sndIntroCoin;
            if (global.link)
                snd=sndIntroRupee;
            audio_play_sound(snd,1,false);
            state=2;
        }
    break
    case (2):
        //grow the logo
        if (image_xscale)
        {
            wobble=1;
            state=3;
        }
        else
            image_xscale+=0.05;
    break
    case (3):
        //dewobble the logo
        if (wobble&gt;0)
            wobble-=0.05;
        else
        {
            alarm[0]=30;
            state=4;
        }
    break
    case (4):
        if (alarm[0])
            alarm[0]--;
        else
        {
            //It's-a me, Mario!
            var snd=sndIntroMario;
            //HIYAH
            if (global.link)
                snd=sndIntroLink;
            audio_play_sound(snd,1,false);
            alarm[0]=30;
            state=5;
        }
    break
    case (5):
        if (alarm[0])
            alarm[0]--;
        else
            if (image_alpha)
            {
                alarm[0]=80;
                state=6;
            }
            else
                image_alpha+=0.05;
    break
    case (6):
        if (alarm[0])
            alarm[0]--;
        else
            if (image_alpha&gt;0)
                image_alpha-=0.05;
            else
                if (image_xscale&gt;0)
                    image_xscale-=0.05;
                else
                {
                    alarm[0]=40;
                    state=7;
                }
    break
    case (7):
        if (alarm[0])
            alarm[0]--;
        else
            room_goto_next();
    break
}
//debug
if (keyboard_check_pressed(ord("R")))
    room_restart();
if (keyboard_check_pressed(vk_space))
    room_goto_next();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw intro
var vw=view_wview[0]*0.5,vh=view_hview[0]*0.5,dir=get_timer()/900,w=wobble*0.04;
if (image_xscale&gt;0)
    draw_sprite_ext(sprIntro,global.link,vw,vh,2*(image_xscale+lengthdir_x(w,dir)),
                    2*(image_xscale+lengthdir_y(w,dir)),0,c_white,1);
draw_set_halign(fa_center);
draw_set_font(fntMario);
draw_set_alpha(image_alpha);
draw_set_color(c_white);
draw_text(vw,vh+128,"Mario (c) Nintendo");
draw_set_font(fntLink);
draw_text(vw,vh+160,"Link (c) Nintendo");
draw_set_font(-1);
draw_set_alpha(1);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
